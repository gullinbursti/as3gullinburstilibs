<languageVersion : 1.0;>
kernel GradientOverlay
<
namespace : "GradientOverlay";
vendor : "Svante Hellberg";
version : 1;
description : "Creates a gradient overlay.";
>
{
    parameter float4 xywh 
    <
    defaultValue:float4(0.0, 0.0, 269.0, 721.0);
    maxValue:float4(5000.0, 5000.0, 5000.0, 5000.0);
    minValue:float4(0.0, 0.0, 0.0, 0.0);
    >;
    
    parameter pixel4 color 
    <
    defaultValue:pixel4(1.0, 0.0, 0.0, 1.0);
    >;

    
    parameter float multiply
    <
    	defaultValue:float(0); 
        maxValue:float(1.0);
        minValue:float(-1.0);
    >;
    
    input image4 src;
    output pixel4 dst;
  
    void evaluatePixel()
    {
    
        float2 p = outCoord();
        pixel4 cP = sampleNearest(src,p);
        
        if (p.x < xywh[0] || p.y < xywh[1] || p.x > (xywh[0]+xywh[2]) || p.y > (xywh[1]+xywh[3]) ) {
        
        	dst = cP;
	        
        } else {
          	float d = (p.y-xywh[1]) / (xywh[3]);
	        d = d+multiply;
	        pixel4 outpixle = mix(cP,color,d*color.a);
	        outpixle.a = cP.a;
	        dst = outpixle;
        }
        
    }
}