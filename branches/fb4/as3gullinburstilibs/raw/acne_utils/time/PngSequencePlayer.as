package utils.time {	import flash.display.MovieClip;	import flash.events.EventDispatcher;	import flash.utils.setInterval;	public class PngSequencePlayer extends EventDispatcher {		//---------------------------------------------------------		//		//	VARS		//		//---------------------------------------------------------					 		 	// CONSTANTS	 		 	// PRIVATE	 		 	private var _siteFrameRate:Number = 72;	 		 	private static var _instance:PngSequencePlayer;	 	//	 	private var _actives:Array;	 	private var _intervalArr:Array;	 	// PUBLIC	 		 	// GET & SET	 		 	//---------------------------------------------------------	 	//	 	//	PUBLIC	 	//	 	//---------------------------------------------------------	 			public function PngSequencePlayer(ste:SingletonEnforcer) {			_siteFrameRate = 72;			_intervalArr = new Array();		}		public static function get instance():PngSequencePlayer {			if (PngSequencePlayer._instance == null) {				PngSequencePlayer._instance = new PngSequencePlayer(new SingletonEnforcer());			}			return PngSequencePlayer._instance;		}				public function playSequence(clip:MovieClip, targetFrame:Number, rate:Number = 25, sequenceArr:Array = null):void {						var intervalID:Number = setInterval(render, 1000/rate);			_intervalArr.push(intervalID);			var startFrame:Number = clip.currentFrame;			var f:Number = startFrame;			if (sequenceArr) {				f = 0;			}						function render():void {				if (sequenceArr) {										clip.gotoAndStop(sequenceArr[f]);					f++;									} else {										if (startFrame < targetFrame) {						f--;					} else if (startFrame > targetFrame) {						f++;					}					clip.gotoAndStop(f);									}			}		}				//---------------------------------------------------------	 	//	 	//	PRIVATE	 	//	 	//---------------------------------------------------------	 		 	//---------------------------------------------------------	 	//	 	//	HANDLERS	 	//	 	//---------------------------------------------------------	 		}}internal class SingletonEnforcer {}